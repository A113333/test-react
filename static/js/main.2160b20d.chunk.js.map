{"version":3,"sources":["useFetch.js","components/CloseConfirmation.js","components/ExerciseAppbar.js","components/ItsDoneComponent.js","components/BackButton.js","components/ValueLister.js","components/ValuePicker.js","components/navbar.js","components/Cards.js","components/Home.js","components/ValueDetails.js","components/CreateValue.js","components/NotFound.js","components/Cardsorter.js","components/ValueSorter.js","components/BackToHomeButton.js","components/ValueResults.js","components/ValueCompassStep1.js","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Transition","React","forwardRef","props","ref","Slide","direction","CloseIt","title","text","donotQuite","history","useHistory","open","Dialog","TransitionComponent","keepMounted","onClose","aria-describedby","DialogTitle","DialogContent","DialogContentText","id","DialogActions","Button","onClick","push","pathname","ExerciseAppbar","header","step","showCloseDialog","setshowCloseDialog","className","Box","sx","flexGrow","AppBar","height","width","maxWidth","left","transform","bgcolor","Toolbar","Typography","variant","component","userSelect","color","Tooltip","IconButton","size","edge","aria-label","CloseConfirmation","option1","option2","ItsDoneComponent","onYes","setOpen","handleClose","BackButton","startIcon","goBack","float","mb","mt","mr","ValueLister","values","Array","length","fill","checkedState","setCheckedState","nrsPicked","setnrsPicked","itsDone","setitsDone","showItsDone","setshowItsDone","smallScreen","useMediaQuery","nr","forEach","item","index","nextPage","userValueArray","window","scrollTo","top","state","overflow","LinearProgress","value","position","padding","zIndex","List","maxHeight","subheader","map","desc","Checkbox","fontSize","right","verticalAlign","checked","onChange","updatedCheckedState","handleOnChange","htmlFor","endIcon","disabled","ValueList","slide","setSlide","in","mountOnEnter","unmountOnExit","Container","backgroundColor","Navbar","anchorEl","setAnchorEl","Boolean","aria-controls","undefined","aria-haspopup","aria-expanded","event","currentTarget","MenuListProps","MenuItem","MultiActionAreaCard","rubrik","linkTo","stateColor","isActive","img","goTo","Card","boxShadow","mx","CardActionArea","CardMedia","image","alt","CardContent","gutterBottom","fontWeight","CardActions","fullWidth","TabPanel","children","other","role","hidden","aria-labelledby","p","a11yProps","Home","user","setValue","borderBottom","borderColor","Tabs","newValue","centered","Tab","icon","label","Grid","container","spacing","xs","md","columns","sm","ValueDetalis","useParams","method","CreateValue","valueTitle","setValueTitle","valueDesc","setValueDesc","valueCategori","setvalueCategori","handleSubmit","e","preventDefault","categori","headers","body","JSON","stringify","onSubmit","type","required","target","disable","NotFound","to","CardSorter","arryOfValues","valueArray","showTop","setShowTop","showBottom","setShowBottom","startValue","setstartValue","cardsSorted","setcardsSorted","totalClicks","settotalClicks","ShowItsDone","setShowItsDone","pickedCards","setPickedCards","isItDone","setisItDone","countTotalClicks","clicks","clickBottom","prevArray","pts","Math","round","align","Divider","textAlign","justifyContent","margin","pop","clickTop","display","borderRadius","paddingBottom","pb","pt","ValueSorter","obj","useLocation","BackToHomeButton","labels","0","1","2","3","4","5","ValueResults","hover","setHover","ShowValueInfo","setShowValueInfo","postResult","results","sort","a","b","handleShowValueInfo","Avatar","ml","alignItems","Rating","precision","onChangeActive","newHover","emptyIcon","style","opacity","ValueCompassStep1","lineHeight","Paper","elevation","flexWrap","m","ListItem","ListItemAvatar","ListItemText","primary","secondary","theme","createTheme","palette","main","blue","typography","fontFamily","fontWeightRegular","fontWeightMedium","fontWeightBold","h1","h2","h3","h4","button","components","MuiButton","variants","border","App","Fragment","CssBaseline","basename","process","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2160b20d.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n// custom hooks måste börja med use\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const abortCont = new AbortController();\r\n    fetch(url, { signal: abortCont.signal })\r\n      .then((res) => {\r\n        // finns det en error?\r\n        if (!res.ok) {\r\n          throw Error(\"Kunde inte hämta datan\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        // när values är hämtade så ändras isPending från sant till falsk\r\n        setIsPending(false);\r\n        setData(data);\r\n        // så err försvinner om man vid senare tillfälle lyckas hämta\r\n        setError(null);\r\n      })\r\n      .catch((err) => {\r\n        // för att se till att err msg går fram sålänge det inte är pga abortcontroller\r\n        if (err.name === \"AbortError\") {\r\n          console.log(\"fetch aborted\");\r\n        } else {\r\n          // så den inte visar Laddar om error\r\n          setIsPending(false);\r\n          // err state updateras så den syns med error message\r\n          setError(err.message);\r\n        }\r\n      });\r\n    // så att man inte får error för att man försäker ändra state på en unmountad component\r\n    return () => abortCont.abort();\r\n  }, [url]);\r\n\r\n  return { data, isPending, error };\r\n};\r\nexport default useFetch;\r\n","import React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Slide from \"@mui/material/Slide\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction CloseIt({ title, text, donotQuite }) {\r\n  const history = useHistory();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const closeExercise = () => {\r\n    history.push({\r\n      pathname: \"/\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={donotQuite}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>{title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            {text}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={donotQuite}>Nej</Button>\r\n          <Button onClick={closeExercise}>Ja</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CloseIt;\r\n","import React, { useState } from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport CloseConfirmation from \"./CloseConfirmation\";\r\n\r\nexport default function ExerciseAppbar({ header, step }) {\r\n  const [showCloseDialog, setshowCloseDialog] = useState(false);\r\n\r\n  const pressClose = () => {\r\n    setshowCloseDialog(true);\r\n  };\r\n\r\n  const donotQuite = () => {\r\n    setshowCloseDialog(false);\r\n    console.log(\"Körs\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"appBarPadder\">\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar\r\n          sx={{\r\n            height: \"64px\",\r\n            width: \"100%\",\r\n            maxWidth: \"853px\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%)\",\r\n            bgcolor: 'primary.main',\r\n          }}\r\n        >\r\n          <Toolbar\r\n             sx={{\r\n              bgcolor: 'primary.main',\r\n            }}>\r\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1, userSelect: \"none\",}}>\r\n              {header}\r\n            </Typography>\r\n\r\n            <Button color=\"inherit\"> Steg {step}</Button>\r\n\r\n            <Tooltip title=\"Avsluta övningen\">\r\n              <IconButton\r\n                onClick={() => pressClose()}\r\n                size=\"medium\"\r\n                edge=\"end\"\r\n                color=\"inherit\"\r\n                aria-label=\"close\"\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n      {showCloseDialog && (\r\n        <CloseConfirmation\r\n          title=\"Är du säker att du vill avsluta övningen?\"\r\n          text=\"Avslutar du nu kommer ditt resultat kommer inte sparas och du får börja om från början nästa gång\"\r\n          option1=\"Nej\"\r\n          option2=\"Ja\"\r\n          donotQuite={donotQuite}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Slide from \"@mui/material/Slide\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction ItsDoneComponent({ title, text, onYes, option1, option2 }) {\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>{title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            {text}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>{option1}</Button>\r\n          <Button onClick={onYes ? onYes : handleClose}>{option2}</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItsDoneComponent;\r\n","import React from \"react\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction BackButton() {\r\n  const history = useHistory();\r\n\r\n  const prevPage = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        aria-label=\"Nästa\"\r\n        startIcon={<ArrowBackIosIcon />}\r\n        onClick={prevPage}\r\n        sx={{ float: \"left\", mb: \"15px\", mt: \"45px\", mr: \"15px\" }}\r\n      >\r\n        Tillbaka\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BackButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport List from \"@mui/material/List\";\r\nimport ItsDoneComponent from \"./ItsDoneComponent\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport BackButton from \"./BackButton\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport Box from \"@mui/material/Box\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport { pink } from \"@mui/material/colors\";\r\n//import FormGroup from \"@mui/material/FormGroup\";\r\n//import FormControlLabel from \"@mui/material/FormControlLabel\";\r\n//import Checkbox from \"@mui/material/Checkbox\";\r\n\r\n// fixa hoover\r\n\r\nexport default function ValueLister({ values }) {\r\n  const [checkedState, setCheckedState] = useState(\r\n    new Array(values.length).fill(false)\r\n  );\r\n  const [nrsPicked, setnrsPicked] = useState(0);\r\n  const [itsDone, setitsDone] = useState(false);\r\n  const [showItsDone, setshowItsDone] = useState(false);\r\n\r\n  const smallScreen = useMediaQuery(\"(max-width:322px)\");\r\n  //  [checkedState]);  gör att enbart kör när checkedstate ändras\r\n  useEffect(() => {\r\n    let nr = 0;\r\n    const updateNrsPicked = () => {\r\n      checkedState.forEach((item, index) => {\r\n        if (item) {\r\n          nr = nr + 1;\r\n        }\r\n      });\r\n\r\n      setnrsPicked(nr);\r\n    };\r\n    updateNrsPicked();\r\n    if (nr >= 5) {\r\n      setitsDone(true);\r\n    } else {\r\n      setitsDone(false);\r\n    }\r\n  }, [checkedState]);\r\n\r\n  const handleOnChange = ({ id, title }) => {\r\n    // sätter true / false för checkbox items\r\n    const updatedCheckedState = checkedState.map((item, index) =>\r\n      index === id ? !item : item\r\n    );\r\n\r\n    if (itsDone && checkedState[id]) {\r\n      setCheckedState(updatedCheckedState);\r\n      setshowItsDone(false);\r\n    } else if (itsDone) {\r\n      setshowItsDone(true);\r\n    } else {\r\n      setCheckedState(updatedCheckedState);\r\n      setshowItsDone(false);\r\n    }\r\n    // setUserValues(updatedValues);\r\n  };\r\n  const history = useHistory();\r\n\r\n  const scroll = () => {\r\n    window.scrollTo({ top: 0 });\r\n    console.log(\"scroll körs\");\r\n  };\r\n  //handler för nästa knappen\r\n  const nextPage = () => {\r\n    const userValueArray = [];\r\n\r\n    checkedState.forEach((item, index) => {\r\n      if (item) {\r\n        userValueArray.push(values[index]);\r\n      }\r\n    });\r\n\r\n    scroll();\r\n    history.push({\r\n      pathname: \"/valuesorter\",\r\n      state: userValueArray,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ overflow: \"hidden\" }}>\r\n      <div>\r\n        <LinearProgress\r\n          variant=\"determinate\"\r\n          value={(100 / 5) * nrsPicked}\r\n          color=\"secondary\"\r\n          sx={{\r\n            position: \"fixed\",\r\n            top: \"64px\",\r\n            width: \"100%\",\r\n            maxWidth: \"854px\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, 0)\",\r\n            padding: \"0px\",\r\n            zIndex: 100,\r\n            height: 10,\r\n            // borderRadius: 5,\r\n          }}\r\n        />\r\n\r\n        <List\r\n          sx={{\r\n            width: \"100%\",\r\n            bgcolor: \"background.paper\",\r\n            position: \"relative\",\r\n            overflow: \"auto\",\r\n            maxHeight: \"100%\",\r\n            \"& ul\": { padding: 0 },\r\n          }}\r\n          subheader={<li />}\r\n        >\r\n          {values.map(({ title, desc }, id) => {\r\n            return (\r\n              <li key={id}>\r\n                <div\r\n                  className={checkedState[id] ? \"picked\" : \"value-list-item\"}\r\n                >\r\n                  <Checkbox\r\n                    color=\"default\"\r\n                    sx={{\r\n                      \"& .MuiSvgIcon-root\": { fontSize: 30 },\r\n                      position: \"absolute\",\r\n                      right: \"36px\",\r\n                      verticalAlign: \"middle\",\r\n                    }}\r\n                    id={`custom-checkbox-${id}`}\r\n                    title={title}\r\n                    checked={checkedState[id]}\r\n                    onChange={() => handleOnChange({ id: id, title: title })}\r\n                  />\r\n\r\n                  <Box\r\n                    sx={{\r\n                      mt: \"15px\",\r\n                      \"&:hover\": {\r\n                        transform: \"scale(1.01)\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    <label htmlFor={`custom-checkbox-${id}`}>\r\n                      <Typography variant=\"h3\">\r\n                        {id + 1 + \". \" + title + \" \"}\r\n                      </Typography>\r\n                      <Typography variant=\"body1\">{desc}</Typography>\r\n                    </label>\r\n                  </Box>\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </List>\r\n        <br></br>\r\n        <br></br>\r\n        <Box\r\n          sx={{ transform: smallScreen ? \"scale(0.9)\" : null, width: \"100%\" }}\r\n        >\r\n          <BackButton />\r\n\r\n          {itsDone && (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              aria-label=\"Backa\"\r\n              endIcon={<ArrowForwardIosIcon />}\r\n              onClick={nextPage}\r\n              sx={{ float: \"right\", mb: \"15px\", mt: \"45px\", mr: \"15px\" }}\r\n            >\r\n              Nästa\r\n            </Button>\r\n          )}\r\n\r\n          {nrsPicked < 5 && (\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled=\"true\"\r\n              color=\"success\"\r\n              aria-label=\"Backa\"\r\n              endIcon={<ArrowForwardIosIcon />}\r\n              onClick={nextPage}\r\n              sx={{ float: \"right\", mb: \"15px\", mt: \"45px\", mr: \"15px\" }}\r\n            >\r\n              Välj {5 - nrsPicked} till\r\n            </Button>\r\n          )}\r\n        </Box>\r\n      </div>\r\n\r\n      {showItsDone && (\r\n        <ItsDoneComponent\r\n          title=\"Du har valt tio värderingar\"\r\n          text=\"Välj bort en värdering om du vill välja en ny\"\r\n          option2=\"Okej\"\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import { Typography } from \"@mui/material\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport useFetch from \"../useFetch\";\r\nimport ExerciseAppbar from \"./ExerciseAppbar\";\r\nimport ValueLister from \"./ValueLister\";\r\nimport Slide from \"@mui/material/Slide\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\n// destruct props .text och .values samma som  (props) const = props.value\r\n//export default function ValueList({ text, values })\r\nexport default function ValueList({ text }) {\r\n  // deconstruct return obj {data:values} döper om data till values\r\n  const {\r\n    data: values,\r\n    isPending,\r\n    error,\r\n  } = useFetch(\"http://localhost:3000/valueList\");\r\n\r\n  const [slide, setSlide] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setSlide(true);\r\n  }, []); // Only re-run the effect if count changes\r\n  // useEffect körs på varje render, här hämtas data från JSON server\r\n\r\n  return (\r\n    <div>\r\n      <ExerciseAppbar header={\"Värderinskompassen\"} step={\"2 av 3\"} />\r\n\r\n      {isPending && <div> Laddar ....</div>}\r\n      {error && <div> {error} </div>}\r\n      <Slide direction=\"left\" in={slide} mountOnEnter unmountOnExit>\r\n        <Container sx={{ backgroundColor: \"white\" }}>\r\n          <Typography variant=\"h1\"> Välj dina värderingsord </Typography>\r\n\r\n          <Typography variant=\"body1\">\r\n            {text}\r\n            {/* finns x antal ord läs igenom alla innan du går vidare \r\n                när du är klar: säker att du vill gå vidare (har du läst alla?) */}\r\n            Nedan finner du en lista med 36 värderingsord med en kort\r\n            förklaring. Läs igenom listan och välj de 10 värderingar som känns\r\n            viktigast för dig. Har du svårt att välja? Testa att ställa dig\r\n            frågan: med vilka ord hade jag velat att den som kännde mig bäst\r\n            hade beskrivigt mig med på min egna begravning?\r\n          </Typography>\r\n          <br></br>\r\n          {/* om values finns så körs ValuesComponet  */}\r\n\r\n          {values && <ValueLister values={values} />}\r\n        </Container>\r\n      </Slide>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nexport default function Navbar() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n<Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n\r\n\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            sx={{ mr: 2 }}\r\n            id=\"basic-button\"\r\n            aria-controls={open ? 'basic-menu' : undefined}\r\n            aria-haspopup=\"true\"\r\n            aria-expanded={open ? 'true' : undefined}\r\n            onClick={handleClick}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          \r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'basic-button',\r\n        }}\r\n      >\r\n        <MenuItem onClick={handleClose}>Profil</MenuItem>\r\n        <MenuItem onClick={handleClose}>Konto</MenuItem>\r\n        <MenuItem onClick={handleClose}>Logga ut</MenuItem>\r\n      </Menu>\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            Bli Fri\r\n          </Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Button, CardActionArea, CardActions } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport userEvent from \"@testing-library/user-event\";\r\n\r\nexport default function MultiActionAreaCard({\r\ntext,\r\n  rubrik,\r\n  linkTo,\r\n state,\r\n  stateColor,\r\n  isActive,\r\n  img\r\n}) {\r\n  console.log(stateColor);\r\n\r\n  const history = useHistory();\r\n  const goTo = () => {\r\n    history.push({\r\n      pathname: linkTo,\r\n    });\r\n  };\r\n  return (\r\n    <Card\r\n      sx={{\r\n        bgcolor: \"background.paper\",\r\n        boxShadow: 5,\r\n        mx: \"auto\",\r\n        transform: \"scale(1)\",\r\n      }}\r\n    >\r\n      <CardActionArea onClick={goTo}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"100\"\r\n          image={img}\r\n          alt=\"Kompass\"\r\n        />\r\n\r\n        <CardContent sx={{ padding: \"8px\" }}>\r\n          <Typography gutterBottom variant=\"body1\" component=\"div\" sx={{ fontWeight: \"bold\", fontSize: \"1,4rem\", }}>\r\n            {rubrik}\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"text.secondary\">\r\n            {text}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button\r\n          fullWidth={true}\r\n          onClick={goTo}\r\n          variant=\"contained\"\r\n          color={stateColor}\r\n          disabled={!isActive}\r\n        >\r\n         { isActive? \"STARTA ÖVNINGEN\": \"kommer snart\"}\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Cards from \"./Cards\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Navbar from \"./navbar\";\r\nimport useFetch from \"../useFetch\";\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport ExploreIcon from '@mui/icons-material/Explore';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport MapIcon from '@mui/icons-material/Map';\r\nimport BookIcon from '@mui/icons-material/Book';\r\n\r\n// Grid är 12 columer\r\n/*\r\nxs, extra-small: 0px\r\nsm, small: 600px\r\nmd, medium: 900px\r\nlg, large: 1200px\r\nxl, extra-large: 1536px\r\n*/\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  const smallScreen = useMediaQuery('(max-width:322px)');\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n\r\nexport default function Home() {\r\n  const {\r\n    data: user,\r\n    isPending,\r\n    error,\r\n  } = useFetch(\"http://localhost:8000/user\");\r\n\r\n  console.log(user);\r\n  //  { ...user.values && user.values  }\r\n\r\n\r\n    const [value, setValue] = React.useState(0);\r\n  \r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <Navbar />\r\n\r\n\r\n\r\n      <Box sx={{ width: '100%' }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\" centered>\r\n          <Tab icon={<ExploreIcon />}  label=\"Värderingar\" {...a11yProps(0)} />\r\n          <Tab icon={<MapIcon/>}label=\"Mål\" {...a11yProps(1)} />\r\n          <Tab icon={<BookIcon/>} label=\"Loggbok\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </Box>\r\n      <TabPanel value={value} index={0}>\r\n      <Grid\r\n            container\r\n            spacing={{ xs: 2, md: 3 }}\r\n            columns={{ xs: 4, sm: 8, md: 12 }}\r\n          >\r\n            <Grid item xs={12} sm={4} md={4}>\r\n              <Cards\r\n                text={\r\n                  \"Få hjälp att hitta din kurs, hur vill du vara som människa? Vad är viktigt för dig på riktigt?\"\r\n                }\r\n                rubrik={\"Övning 1: Värdekompassen\"}\r\n                linkTo={\"/values1\"}\r\n                isActive={true}\r\n                img={\"/images/compass.jpg\"}\r\n               \r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4} md={4}>\r\n              <Cards\r\n                text={\r\n                  \"Fortsätt fördjupa dig i värderingar, nu utifrån livsområden. Lägger du din tid och energi på rätt saker?\"\r\n                }\r\n                rubrik={\"Dina livsområden\"}\r\n           \r\n                img={\"/images/map.jpg\"}\r\n              />\r\n            </Grid>{\" \"}\r\n            <Grid item xs={12} sm={4} md={4}>\r\n              <Cards\r\n                text={\r\n                  \"Här presenteras några verktyg för att hjälpa  dig att leva mer efter dina värderingar\"\r\n                }\r\n                rubrik={\"Lev som du önskar\"}\r\n                img={\"/images/water.jpg\"}\r\n                \r\n           \r\n                \r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n \r\n\r\n\r\n      <Grid\r\n            container\r\n            spacing={{ xs: 2, md: 3 }}\r\n            columns={{ xs: 4, sm: 8, md: 12 }}\r\n          >\r\n            <Grid item xs={12} sm={4} md={4}>\r\n              <Cards\r\n                text={\r\n                  \"Vi jobbar hårt för att få detta färdigt\"\r\n                }\r\n                rubrik={\"Inte färdigt\"}\r\n                img={\"/images/darkSky.jpg\"}\r\n              />\r\n   \r\n   </Grid>\r\n          </Grid>\r\n\r\n\r\n\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n       \r\n      <Grid\r\n            container\r\n            spacing={{ xs: 2, md: 3 }}\r\n            columns={{ xs: 4, sm: 8, md: 12 }}\r\n          >\r\n            <Grid item xs={12} sm={4} md={4}>\r\n              <Cards\r\n                text={\r\n                  \"Kommer snart\"\r\n                }\r\n                rubrik={\"Vi har inte kommit så här långt ännu!\"}\r\n                linkTo={\"/values1\"}\r\n                img={\"/images/darkSky.jpg\"}\r\n                \r\n               \r\n              />\r\n            </Grid>\r\n      \r\n          </Grid>\r\n\r\n\r\n\r\n      </TabPanel>\r\n      </Box>\r\n\r\n  \r\n  \r\n  \r\n\r\n      <div className=\"padderTop\">\r\n        <Container>\r\n       \r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport useFetch from \"../useFetch\";\r\n\r\nexport default function ValueDetalis() {\r\n  /* för att kunna välja vilket value som ska visas utifrån route */\r\n  const { id } = useParams();\r\n  // deconstrut svaret från\r\n  console.log(\"körs\");\r\n  const history = useHistory();\r\n  const {\r\n    data: value,\r\n    error,\r\n    isPending,\r\n  } = useFetch(\"http://localhost:3000/valueList/\" + id);\r\n\r\n  const handleClick = () => {\r\n    fetch(\"http://localhost:3000/valueList/\" + value.id, {\r\n      method: \"DELETE\",\r\n    }).then(() => history.push(\"/\"));\r\n  };\r\n  return (\r\n    <div>\r\n      {isPending && <div> Laddar.... </div>}\r\n      {error && <div> {error} </div>}\r\n      {value && (\r\n        <artical>\r\n          <h2> {value.title}</h2>\r\n          <p> {value.desc}</p>\r\n        </artical>\r\n      )}\r\n      <button onClick={handleClick}> Delete </button>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function CreateValue() {\r\n  // skapar något att lagra inputen i\r\n  const [valueTitle, setValueTitle] = useState(\" \");\r\n  const [valueDesc, setValueDesc] = useState(\" \");\r\n  const [valueCategori, setvalueCategori] = useState(\"Fritid\");\r\n  //för att kunna visa loading msg\r\n  const [isPending, setIsPending] = useState(false);\r\n  // obj som representerar history\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // tar värderna från STATE och gör ett objekt av dom\r\n    const value = {\r\n      title: valueTitle,\r\n      desc: valueDesc,\r\n      categori: valueCategori,\r\n    };\r\n    setIsPending(true);\r\n\r\n    fetch(\"http://localhost:3000/valueList\", {\r\n      // berättar för servern att det är en post med JSON data\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      //datan som ska skickas\r\n      body: JSON.stringify(value),\r\n    }).then(() => {\r\n      console.log(value);\r\n      console.log(\"nytt värde tillagt\");\r\n      setIsPending(false);\r\n      history.push(\"/\");\r\n    });\r\n    // går tillbaka ett steg\r\n    // history.go(-1);\r\n  };\r\n  return (\r\n    <div className=\"create\">\r\n      <h2> Du är på create!</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <lable>Värdering:</lable>\r\n        <input\r\n          type=\"text\"\r\n          required\r\n          value={valueTitle}\r\n          onChange={(e) => setValueTitle(e.target.value)}\r\n        />\r\n\r\n        <lable>Beskrivning:</lable>\r\n        <input\r\n          type=\"text\"\r\n          required\r\n          value={valueDesc}\r\n          onChange={(e) => setValueDesc(e.target.value)}\r\n        />\r\n        <select\r\n          value={valueCategori}\r\n          onChange={(e) => setvalueCategori(e.target.value)}\r\n        >\r\n          <option value=\"Arbete\"> Arbete </option>\r\n          <option value=\"Fritid\"> Fritid </option>\r\n        </select>\r\n        {/* första knappen visas om isPending inte sant   */}\r\n        {!isPending && (\r\n          <button onChange={(e) => handleSubmit(e)}>Lägg till värdering</button>\r\n        )}\r\n        {isPending && (\r\n          <button disable onChange={(e) => handleSubmit(e)}>\r\n            Laddar upp värdering\r\n          </button>\r\n        )}\r\n        <p> {valueTitle}</p>\r\n        <p> {valueDesc}</p>\r\n        <p> {valueCategori}</p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h2> Oj, något har blivit fel!</h2>\r\n      <p> Sidan kan inte hittas</p>\r\n      <Link to=\"/\"> Tillbaka till startsidan </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Divider } from \"@mui/material\";\r\nimport Slide from \"@mui/material/Slide\";\r\nimport Container from \"@mui/material/Container\";\r\nimport UndoRoundedIcon from \"@mui/icons-material/UndoRounded\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport ItsDoneComponent from \"./ItsDoneComponent\";\r\nimport BackButton from \"./BackButton\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nfunction CardSorter({ valueArray: arryOfValues }) {\r\n  //  console.log(\"arryOfValues \");\r\n\r\n  const smallScreen = useMediaQuery(\"(max-width:322px)\");\r\n\r\n  console.log(arryOfValues);\r\n  const history = useHistory();\r\n  const [valueArray, setvalueArray] = useState(arryOfValues);\r\n  const [showTop, setShowTop] = useState(0);\r\n  const [showBottom, setShowBottom] = useState(1);\r\n  const [startValue, setstartValue] = useState(2);\r\n  const [slide, setSlide] = useState(false);\r\n  const [cardsSorted, setcardsSorted] = useState(0);\r\n  const [totalClicks, settotalClicks] = useState(0);\r\n  const [ShowItsDone, setShowItsDone] = useState(false);\r\n  const [pickedCards, setPickedCards] = useState([]);\r\n  const [isItDone, setisItDone] = useState(false);\r\n\r\n  const goToResult = () => {\r\n    history.push({\r\n      pathname: \"/valueResults\",\r\n      state: valueArray,\r\n    });\r\n  };\r\n\r\n  const prevPage = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSlide(true);\r\n    console.log(\"cardsSorted \");\r\n    console.log(cardsSorted);\r\n    countTotalClicks();\r\n  }, []); // Only re-run the effect if count changes\r\n  // useEffect körs på varje render, här hämtas data från JSON server\r\n\r\n  const handleChange = () => {\r\n    setSlide((prev) => !prev);\r\n  };\r\n\r\n  const countTotalClicks = () => {\r\n    let clicks = 0;\r\n    arryOfValues.map((item, index) => {\r\n      clicks = clicks + index;\r\n    });\r\n    console.log(\"clicks :\" + clicks);\r\n    settotalClicks(clicks);\r\n  };\r\n\r\n  const scroll = () => {\r\n    window.scrollTo({ top: 0 });\r\n    console.log(\"scroll körs\");\r\n  };\r\n  // scroll();\r\n\r\n  // körs vid sista kortet för att ta bort första kortet ur displayn\r\n  const restartArr = () => {\r\n    console.log(\"arr slut\");\r\n    // en counter som ökar med 1 för varje iteration genom kortleken\r\n    setstartValue(startValue + 1);\r\n    // updaterar så att nästa item visas\r\n    setShowBottom(startValue);\r\n\r\n    setShowTop(showTop + 1);\r\n    console.log(\"showtop / startvalue\" + startValue);\r\n  };\r\n\r\n  // id kommer vara samma tills den startar om\r\n  const clickTop = ({ index, id }) => {\r\n    console.log(\"cardsSorted\");\r\n    console.log(cardsSorted);\r\n\r\n    setPickedCards((prevArray) => [...prevArray, id]);\r\n\r\n    if (cardsSorted !== totalClicks) {\r\n      console.log(\"setcardsSorted(cardsSorted + 1);\");\r\n      setcardsSorted(cardsSorted + 1);\r\n    }\r\n\r\n    if (isItDone) {\r\n      setShowItsDone(true);\r\n      return;\r\n    }\r\n    //lägger till pts\r\n    valueArray.map((item, index) => {\r\n      if (id === item.id) {\r\n        item.pts = item.pts + 1;\r\n      }\r\n    });\r\n    // !isItDone för att den inte ska ändra sig på click vid färdigt\r\n\r\n    if (startValue === valueArray.length) {\r\n      // om övningen är klar\r\n      console.log(\"done\");\r\n      console.log(valueArray);\r\n      setisItDone(true);\r\n      /*  history.push({\r\n        pathname: \"/valueResults\",\r\n        state: valueArray,\r\n      }); */\r\n\r\n      return;\r\n    }\r\n\r\n    // om vi är på sista kortet\r\n    if (showBottom + 1 === valueArray.length) {\r\n      setstartValue(startValue + 1);\r\n      setShowTop(showTop + 1);\r\n      setShowBottom(startValue);\r\n    } else {\r\n      setShowBottom(showBottom + 1);\r\n    }\r\n  };\r\n\r\n  const clickBottom = ({ index, id }) => {\r\n    setPickedCards((prevArray) => [...prevArray, id]);\r\n\r\n    console.log(\"cardsSorted\");\r\n    console.log(cardsSorted);\r\n    console.log(\"totalClicks\");\r\n    console.log(totalClicks);\r\n    console.log(cardsSorted);\r\n    if (cardsSorted !== totalClicks) {\r\n      setcardsSorted(cardsSorted + 1);\r\n    }\r\n\r\n    //om övningen är klart\r\n    if (isItDone) {\r\n      setShowItsDone(true);\r\n      return;\r\n    }\r\n\r\n    //lägger till pts\r\n    valueArray.map((item, index) => {\r\n      if (id === item.id) {\r\n        item.pts = item.pts + 1;\r\n      }\r\n    });\r\n\r\n    if (startValue === valueArray.length) {\r\n      setisItDone(true);\r\n      return;\r\n    }\r\n    index + 1 === valueArray.length ? restartArr() : setShowBottom(index + 1);\r\n  };\r\n\r\n  const goBack = () => {\r\n    console.log(\"cardsSorted\");\r\n    console.log(cardsSorted);\r\n    // för att rätt antal klick ska vara kvar\r\n    setcardsSorted(cardsSorted - 1);\r\n\r\n    // tar bort pts från kort när man backar\r\n    const id = pickedCards[pickedCards.length - 1];\r\n    pickedCards.pop();\r\n\r\n    if (isItDone) {\r\n      valueArray.map((item, index) => {\r\n        if (id === item.id) {\r\n          item.pts = item.pts - 1;\r\n        }\r\n      });\r\n      setisItDone(false);\r\n      return;\r\n    }\r\n\r\n    valueArray.map((item, index) => {\r\n      if (id === item.id) {\r\n        item.pts = item.pts - 1;\r\n      }\r\n    });\r\n\r\n    // om vi är på första kortet i bottenhögen, dvs om vi måste ändra showTop\r\n    if (startValue === showBottom + 1) {\r\n      console.log(\"är på första kortet i top, dvs om vi måste ändra showTop\");\r\n      setstartValue(startValue - 1);\r\n      setShowTop(showTop - 1);\r\n\r\n      setShowBottom(valueArray.length - 1);\r\n\r\n      console.log(\"-------------\");\r\n      console.log(startValue);\r\n      console.log(valueArray.length);\r\n    } else if (showBottom >= 0) {\r\n      setShowBottom(showBottom - 1);\r\n    }\r\n\r\n    //ta bort points\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <LinearProgress\r\n        variant=\"determinate\"\r\n        value={Math.round(100 / totalClicks) * cardsSorted}\r\n        color=\"secondary\"\r\n        sx={{\r\n          position: \"fixed\",\r\n          top: \"64px\",\r\n          width: \"100%\",\r\n          maxWidth: \"854px\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, 0)\",\r\n          padding: \"0px\",\r\n          zIndex: 100,\r\n          height: 15,\r\n          // borderRadius: 5,\r\n        }}\r\n      />\r\n      <Slide direction=\"left\" in={slide}>\r\n        <Container>\r\n          <Typography\r\n            variant=\"h2\"\r\n            gutterBottom\r\n            align=\"center\"\r\n            sx={{ mt: \"30px\" }}\r\n          >\r\n            Sortera din lista\r\n          </Typography>\r\n          <Divider></Divider>\r\n\r\n          <Typography\r\n            variant=\"body1\"\r\n            align=\"center\"\r\n            sx={{ mb: \"25px\", mt: \"25px\" }}\r\n          >\r\n            {\" \"}\r\n            Om du enbart kunde leva efter en av de två värderingarna, vilken\r\n            hade du valt?\r\n          </Typography>\r\n\r\n          <Box textAlign=\"center\" sx={{ mt: \"15px\", mb: \"15px\" }}>\r\n            <Button\r\n              disabled={cardsSorted === 0 ? true : false}\r\n              variant=\"outlined\"\r\n              startIcon={<UndoRoundedIcon />}\r\n              sx={{\r\n                justifyContent: \"center\",\r\n                margin: \"auto\",\r\n              }}\r\n              onClick={() => goBack()}\r\n            >\r\n              Ångra val\r\n            </Button>\r\n          </Box>\r\n\r\n          <div className=\"relative\">\r\n            <Box>\r\n              {valueArray.map(({ title, desc, id }, index) => {\r\n                return (\r\n                  <Box\r\n                    key={\"top\" + id}\r\n                    className={index === showTop ? \"show\" : \"hidden\"}\r\n                    onClick={() => clickTop({ index: index, id: id })}\r\n                    sx={{\r\n                      display: \"table\",\r\n                      mx: \"auto\",\r\n                      margin: \"auto\",\r\n                      boxShadow: 2,\r\n                      width: \"100%\",\r\n                      height: \"200px\",\r\n                      maxWidth: \"450px\",\r\n                      backgroundColor: \"white\",\r\n                      borderRadius: \"6px\",\r\n                      userSelect: \"none\",\r\n                      bgcolor: \"primary.main\",\r\n                      color: \"white\",\r\n                      \"&:hover\": {\r\n                        transform: \"scale(1.02)\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    {isItDone && (\r\n                      <Typography\r\n                        variant=\"h3\"\r\n                        color=\"white\"\r\n                        sx={{\r\n                          textAlign: \"center\",\r\n                          paddingBottom: \"5px\",\r\n                          p: \"25px\",\r\n                          pb: \"10px\",\r\n                          color: \"white\",\r\n                          padding: \"10px\",\r\n                          mt: \"45px\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        Du är nu färdig med övningen! Tryck på \"Se resultat\"\r\n                        knappen för att se ditt resultat.\r\n                      </Typography>\r\n                    )}\r\n\r\n                    <Box className={isItDone && \"hiddenCard\"}>\r\n                      <Typography\r\n                        variant=\"h2\"\r\n                        color=\"white\"\r\n                        sx={{\r\n                          textAlign: \"center\",\r\n                          paddingBottom: \"5px\",\r\n                          pt: \"25px\",\r\n                          pb: \"10px\",\r\n                          mt: \"5px\",\r\n                          color: \"white\",\r\n                        }}\r\n                      >\r\n                        {title}\r\n                      </Typography>\r\n\r\n                      <>\r\n                        <Divider\r\n                          className=\"white\"\r\n                          sx={{ width: \"85%\", mx: \"auto\" }}\r\n                        ></Divider>\r\n                      </>\r\n\r\n                      <Typography\r\n                        variant=\"body1\"\r\n                        align=\"center\"\r\n                        sx={{ p: \"30px\", pt: \"15px\", fontSize: \"1.1rem\" }}\r\n                      >\r\n                        {desc}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </Box>\r\n          </div>\r\n          <Box className={isItDone && \"hiddenCard\"}>\r\n            <Divider sx={{ width: \"50%\", mt: \"30px\", mb: \"30px\", mx: \"auto\" }}>\r\n              {\" \"}\r\n              <Typography variant=\"h3\" margin={\"auto\"} gutterBottom>\r\n                Eller..\r\n              </Typography>\r\n            </Divider>\r\n\r\n            <div className=\"relative\">\r\n              {\" \"}\r\n              {valueArray.map(({ title, desc, id }, index) => {\r\n                return (\r\n                  <Box\r\n                    key={\"bottom\" + id}\r\n                    className={showBottom === index ? \"show\" : \"hidden\"}\r\n                    onClick={() => clickBottom({ index: index, id: id })}\r\n                    sx={{\r\n                      display: \"table\",\r\n                      mx: \"auto\",\r\n                      transform: \"scale(1)\",\r\n                      margin: \"auto\",\r\n                      boxShadow: 2,\r\n                      borderColor: \"grey.500\",\r\n                      width: \"95%\",\r\n                      height: \"200px\",\r\n                      maxWidth: \"450px\",\r\n                      backgroundColor: \"white\",\r\n                      borderRadius: \"6px\",\r\n                      userSelect: \"none\",\r\n                      bgcolor: \"primary.main\",\r\n                      color: \"white\",\r\n                      \"&:hover\": {\r\n                        transform: \"scale(1.02)\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant=\"h2\"\r\n                      sx={{\r\n                        textAlign: \"center\",\r\n                        paddingBottom: \"5px\",\r\n                        pt: \"25px\",\r\n                        pb: \"10px\",\r\n                        mt: \"5px\",\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      {title}\r\n                    </Typography>\r\n\r\n                    <>\r\n                      <Divider\r\n                        className=\"white\"\r\n                        sx={{ width: \"85%\", mx: \"auto\" }}\r\n                      ></Divider>\r\n                    </>\r\n\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      align=\"center\"\r\n                      sx={{ p: \"30px\", pt: \"15px\", fontSize: \"1.1rem\" }}\r\n                    >\r\n                      {desc}\r\n                    </Typography>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </div>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              transform: smallScreen ? \"scale(0.9)\" : null,\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <BackButton />\r\n\r\n            {isItDone && (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                aria-label=\"Backa\"\r\n                endIcon={<ArrowForwardIosIcon />}\r\n                onClick={goToResult}\r\n                sx={{ float: \"right\", mb: \"15px\", mt: \"45px\", mr: \"15px\" }}\r\n              >\r\n                Se Resultat\r\n              </Button>\r\n            )}\r\n\r\n            {!isItDone && (\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled=\"true\"\r\n                color=\"success\"\r\n                aria-label=\"Backa\"\r\n                endIcon={<ArrowForwardIosIcon />}\r\n                sx={{ float: \"right\", mb: \"15px\", mt: \"15px\" }}\r\n              >\r\n                {totalClicks - cardsSorted} kort kvar\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </Container>\r\n      </Slide>\r\n      {ShowItsDone && (\r\n        <ItsDoneComponent\r\n          title=\"Bra jobbat!\"\r\n          text=\"Du är nu klar med värderingskompassen, tryck på knappen SE RESULTAT för att se ditt resultat\"\r\n          option2=\"Okej!\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardSorter;\r\n","import CardSorter from \"./Cardsorter\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ExerciseAppbar from \"./ExerciseAppbar\";\r\n\r\nexport default function ValueSorter(obj) {\r\n  const location = useLocation();\r\n  const valueArray = location.state; // tar valueArray från \"history.push\"\r\n  console.log(valueArray);\r\n  //const valueArray = obj.valueArray;\r\n  // console.log(obj);\r\n\r\n  // if current === length - 1: return 0 else return +1\r\n  console.log(obj);\r\n\r\n  return (\r\n    <div>\r\n      <ExerciseAppbar step=\"2 av 3\" header=\"Rangordnare\" />\r\n\r\n      {valueArray && <CardSorter valueArray={valueArray} />}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\nfunction BackToHomeButton() {\r\n  const history = useHistory();\r\n\r\n\r\n\r\n  const toStart = () => {\r\n    history.push({\r\n      pathname: \"/\",\r\n    });\r\n  };\r\n \r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" onClick={toStart} sx={{ mb: \"25px\", mt:\"25px\",}} >\r\n        Tillbaka till startsidan\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BackToHomeButton;\r\n","import { useLocation } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Slide from \"@mui/material/Slide\";\r\nimport ExerciseAppbar from \"./ExerciseAppbar\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { Divider } from \"@mui/material\";\r\nimport Rating from \"@mui/material/Rating\";\r\nimport Box from \"@mui/material/Box\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport BackToHomeButton from \"./BackToHomeButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport VolumeDown from \"@mui/icons-material/VolumeDown\";\r\nimport VolumeUp from \"@mui/icons-material/VolumeUp\";\r\n\r\nconst labels = {\r\n  0: \"Väldigt Dåligt\",\r\n\r\n  1: \"Ganska Dåligt\",\r\n\r\n  2: \"Rätt bra\",\r\n\r\n  3: \"Bra\",\r\n\r\n  4: \"Mycket Bra\",\r\n\r\n  5: \"Väldigt Bra\",\r\n};\r\n\r\nfunction ValueResults(obj) {\r\n  const [slide, setSlide] = useState(false);\r\n  const [value, setValue] = React.useState(3);\r\n  const [hover, setHover] = React.useState(-1);\r\n  const [ShowValueInfo, setShowValueInfo] = React.useState(0);\r\n  const [slideValue, setSlideValue] = React.useState(30);\r\n\r\n  useEffect(() => {\r\n    postResult();\r\n    setSlide(true);\r\n  }, []);\r\n\r\n  const location = useLocation();\r\n  const valueArray = location.state;\r\n\r\n  const results = valueArray.sort((a, b) => {\r\n    return b.pts - a.pts;\r\n  });\r\n\r\n  const user = {\r\n    values: results,\r\n    state: 1.1,\r\n  };\r\n\r\n  const handleShowValueInfo = (index) => {\r\n    console.log(index);\r\n    setShowValueInfo(index);\r\n  };\r\n\r\n  const postResult = () => {\r\n    fetch(\"http://localhost:3000/user\", {\r\n      // berättar för servern att det är en post med JSON data\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      //datan som ska skickas\r\n      body: JSON.stringify(user),\r\n    }).then(() => {\r\n      console.log(results);\r\n      console.log(\"resultat sparat\");\r\n\r\n      // visa confomration att det sparats här?\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Slide direction=\"left\" in={slide} mountOnEnter unmountOnExit>\r\n      <div>\r\n        <ExerciseAppbar header={\"Värderinskompassen\"} step={\"3 av 3\"} />\r\n        <Container maxWidth=\"md\">\r\n          <div>\r\n            <Typography\r\n              variant=\"h2\"\r\n              gutterBottom\r\n              align=\"center\"\r\n              sx={{ mt: \"30px\" }}\r\n            >\r\n              Dina fem viktigaste värderingar\r\n            </Typography>\r\n            <Divider></Divider>\r\n            <Typography\r\n              variant=\"body1\"\r\n              gutterBottom\r\n              align=\"center\"\r\n              sx={{ mb: \"25px\", mt: \"25px\" }}\r\n            >\r\n              Bra jobbat, ta ett djupt andetag och tacka dig själv, du har\r\n              precis gjort något viktigt och meningsfullt för din egna skull. Ta\r\n              nu en noggran titt på dina värderingar.\r\n            </Typography>\r\n            <div className=\"noStyleList\">\r\n              {results.map(({ title, desc, pts }, index) => {\r\n                return (\r\n                  <Box\r\n                    onClick={() => handleShowValueInfo(index)}\r\n                    key={index}\r\n                    className={\r\n                      ShowValueInfo === index ? \"transform90\" : \"not active\"\r\n                    }\r\n                    sx={{\r\n                      display: \"table\",\r\n                      mx: \"auto\",\r\n                      transform: \"scale(1)\",\r\n                      margin: \"auto\",\r\n                      mt: \"15px\",\r\n                      boxShadow: 5,\r\n                      borderColor: \"grey.500\",\r\n                      width: \"95%\",\r\n                      height: \"200px\",\r\n                      maxWidth: \"450px\",\r\n                      bgcolor: \"primary.main\",\r\n                      color: \"white\",\r\n\r\n                      borderRadius: \"6px\",\r\n                      mb: \"25px\",\r\n                      \"&:hover\": {\r\n                        transform: \"scale(1.05)\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    <Avatar\r\n                      sx={{\r\n                        position: \"absolute\",\r\n                        bgcolor: \"white\",\r\n                        color: \"primary.main\",\r\n                        float: \"left\",\r\n                        width: 30,\r\n                        height: 30,\r\n                        mt: \"15px\",\r\n                        ml: \"15px\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        variant=\"body1\"\r\n                        sx={{ fontWeight: \"bold\", userSelect: \"none\" }}\r\n                      >\r\n                        {\" \"}\r\n                        {index + 1}\r\n                      </Typography>{\" \"}\r\n                    </Avatar>\r\n\r\n                    <li key={index}>\r\n                      <Typography\r\n                        variant=\"h2\"\r\n                        sx={{\r\n                          textAlign: \"center\",\r\n                          paddingBottom: \"5px\",\r\n                          pt: \"25px\",\r\n                          ml: \"30px\",\r\n                          mr: \"30px\",\r\n                          pb: \"5px\",\r\n                          mt: \"5px\",\r\n\r\n                          color: \"white\",\r\n                          userSelect: \"none\",\r\n                        }}\r\n                      >\r\n                        {title}\r\n                      </Typography>\r\n                      <Divider\r\n                        className=\"white\"\r\n                        sx={{ width: \"65%\", mx: \"auto\" }}\r\n                      ></Divider>\r\n                      <Typography\r\n                        variant=\"body1\"\r\n                        sx={{\r\n                          p: \"15px\",\r\n                          fontSize: \"1.1rem\",\r\n                          userSelect: \"none\",\r\n                          ml: \"25px\",\r\n                          mr: \"25px\",\r\n                        }}\r\n                      >\r\n                        {\" Jag vill vara \" + desc}\r\n                      </Typography>\r\n                    </li>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </div>\r\n            <br></br>\r\n            <Typography\r\n              variant=\"h3\"\r\n              text=\"center\"\r\n              sx={{\r\n                textAlign: \"center\",\r\n              }}\r\n              gutterBottom\r\n            >\r\n              Hur bra tycker du att du lever efter dessa fem värderingar idag?\r\n            </Typography>\r\n            <Box\r\n              sx={{\r\n                mx: \"auto\",\r\n                width: 200,\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                height: \"40px\",\r\n              }}\r\n            >\r\n              <Rating\r\n                name=\"hover-feedback\"\r\n                value={value}\r\n                precision={1}\r\n                onChange={(event, newValue) => {\r\n                  setValue(newValue);\r\n                }}\r\n                onChangeActive={(event, newHover) => {\r\n                  setHover(newHover);\r\n                }}\r\n                emptyIcon={\r\n                  <StarIcon style={{ opacity: 0.55 }} fontSize=\"inherit\" />\r\n                }\r\n              />\r\n              {value !== null && (\r\n                <Box sx={{ ml: 2 }}>{labels[hover !== -1 ? hover : value]}</Box>\r\n              )}\r\n            </Box>\r\n            <Typography\r\n              variant=\"h3\"\r\n              sx={{\r\n                textAlign: \"center\",\r\n                paddingBottom: \"5px\",\r\n                pt: \"25px\",\r\n                pb: \"10px\",\r\n                mt: \"5px\",\r\n                mr: \"45px\",\r\n                userSelect: \"none\",\r\n              }}\r\n            >\r\n              Första övningen klar!\r\n            </Typography>\r\n            <Divider></Divider>\r\n            <Typography variant=\"body1\" gutterBottom>\r\n              I nästa övning kommer vi fortsätta fördjupa oss i värderingar. då\r\n              kommer vi kolla på hur dina värderingar ser ut i olika livsområden\r\n              och hur du värderar de olika delarna av livet.\r\n            </Typography>\r\n          </div>\r\n          <Box textAlign=\"center\">\r\n            {\" \"}\r\n            <BackToHomeButton />{\" \"}\r\n          </Box>\r\n        </Container>\r\n      </div>\r\n    </Slide>\r\n  );\r\n}\r\n\r\nexport default ValueResults;\r\n","import Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Slide from \"@mui/material/Slide\";\r\nimport ExerciseAppbar from \"./ExerciseAppbar\";\r\nimport Container from \"@mui/material/Container\";\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Divider } from '@mui/material';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ExploreIcon from '@mui/icons-material/Explore';\r\nimport Box from \"@mui/material/Box\";\r\n\r\n\r\nfunction ValueCompassStep1() {\r\n  const [slide, setSlide] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setSlide(true);\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n  const nextPage = () => {\r\n    history.push({\r\n      pathname: \"/valueList\",\r\n    });\r\n  };\r\n\r\n  const prevPage = () =>{\r\n    history.goBack()\r\n  }\r\n\r\n  const smallScreen = useMediaQuery('(max-width:445px)');\r\nconsole.log(smallScreen)\r\n\r\n  return (\r\n    <Slide direction=\"left\" in={slide} mountOnEnter unmountOnExit>\r\n      <div>\r\n        <ExerciseAppbar header={\"VärdeKompassen\"} step={\"1 av 3\"} />\r\n        <Container maxWidth=\"md\">\r\n\r\n        <Typography variant=\"h2\" gutterBottom align=\"center\" sx={{mt: \"30px\", }}>\r\n        Vad är en värdering?\r\n          </Typography>\r\n          <Divider sx={{width: \"75%\", mx: \"auto\"}}></Divider>\r\n \r\n\r\n          <Typography variant=\"body1\" sx={{fontWeight: \"bold\", lineHeight: 1.7, mt:\"25px\" ,}} gutterBottom>\r\n          Värderingar är vårt hjärtas innersta önskan och är beskriver hur du vill agerade i världen. \r\n          Värderingar handlar inte om vad du vill uppnå, ha eller prestera, utan representerar kvaliteter \r\n          som du önskade att du kunde införliva i dina handlingar. Vad vill jag att mitt liv ska handla om? Hur vill jag behandla mig \r\n          själv och andra människor? Vilken typ av människa vill jag vara?\r\n          <br></br> </Typography>\r\n\r\n          <Paper elevation={3}     \r\n           sx={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          m: \"25px\",\r\n          mt: \"10px\",\r\n          mx: \"auto\",\r\n          p: \"15px\",\r\n          width: smallScreen ? \"90%\" : \"45%\",\r\n          float: smallScreen ? null : \"right\",\r\n          bgcolor: 'primary.main',\r\n          color: \"white\",    \r\n      }}>\r\n            <Typography sx={{fontWeight: \"bold\",}}>Att leva efter sina värderingar kan: </Typography>\r\n            <Typography variant=\"body1\" > minska\r\n            nedstämdhet, skapa mening och motivation, hjälpa dig ta dig igenom\r\n            svåra situationer och underlättar svåra val.\r\n            nedstämdhet, skapa mening och motivation, hjälpa dig ta dig igenom\r\n            svåra situationer och underlättar svåra val.\r\n          \r\n           \r\n            </Typography> \r\n          \r\n          </Paper>\r\n\r\n          <Typography variant=\"body1\" sx={{ lineHeight: 1.7, width: smallScreen ? \"100%\" : \"50%\",\r\n          }} gutterBottom>\r\n          Man kan jämföra värderingar med en kompass; du kan aldrig komma fram till “norr”, men du kan \r\n          ständigt vandra norrut. Värderingar ger dig en riktigt att sträva mot; en kompasskurs i livet.\r\n          <br></br></Typography>\r\n          <Typography variant=\"body1\" sx={{lineHeight: 1.7, width: smallScreen ? \"100%\" : \"50%\",\r\n          }} gutterBottom>\r\n          Till skillnad från ett mål går det aldrig att uppnå eller bli klar med en värdering. \r\n          Som exempel kan man ta målet att gifta sig, jämfört med värderingen att vara en öppen, omtänksam \r\n          och kärleksfull partner.\r\n         </Typography>\r\n\r\n\r\n        \r\n\r\n          <Typography variant=\"h3\" sx={{mt:\"15px\"}} gutterBottom>\r\n            Hur fungerar Värdekompassen?\r\n          </Typography>\r\n          <Divider></Divider>   \r\n\r\n    <Typography variant=\"body1\" sx={{lineHeight: 1.7, mt:\"10px\"}} gutterBottom>\r\n    Värdekompassen är uppbyggd i tre steg.\r\n        I det första steget kommer du välja ut tio värderingsord ur vår värderingslista.\r\n        I det andra steget ska du välja mellan dina värderingar för att hitta de fem värderingar som är absolut viktigast för dig.\r\n        När du har gjort detta kommer du få se ditt resultat och få möjlighet att läsa mer om dina valda värderingar.\r\n        Du kommer säkert märka när du läser vår värderingslista att olika värderingarkan ha olika vikt \r\n        i olika delar av livet; vissa värderingar är viktiga på arbetet, andra i relationer och återigen andra på fritiden. \r\n        Detta ä något vi kommer jobba vidare med i nästa etapp.\r\n        </Typography>\r\n\r\n          <List sx={{ \r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          mt: smallScreen ? \"50px\" : \"110px\",\r\n          mb: smallScreen ? \"50px\" : \"110px\",\r\n        \r\n          width: smallScreen ? \"90%\" : \"45%\",\r\n          float: smallScreen ? null : \"left\",\r\n          \r\n      }}>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar sx={{ bgcolor: \"primary.main\", color: \"white\", fontWeight: \"bold\"}} >\r\n            1\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Välj värderingar\" secondary=\"Välj ut de 10 värderingsord som känns viktigast \r\n        för dig ur vår värderingslista.\" />\r\n      </ListItem>\r\n\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar sx={{ bgcolor: \"primary.main\", color: \"white\", fontWeight: \"bold\"}} >\r\n           2\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Rangordna din värderingar\" secondary=\"Ställ ord mot ord för att rangordna din lista.\" />\r\n      </ListItem>\r\n\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar sx={{ bgcolor: \"primary.main\", color: \"white\", fontWeight: \"bold\"}}>\r\n          3\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Se ditt resultat\" secondary=\"Titta nog igenom din topp fem lista och \r\n        fundera över dina värderingar\" />\r\n      </ListItem>\r\n\r\n    </List>\r\n    <Box sx={{ width: \"49%\", float: \"right\", width: smallScreen ? \"90%\" : \"45%\",\r\n          float: smallScreen ? null : \"left\",   padding: \"15px\",\r\n          mt: \"25px\", mb: \"25px\",}}>\r\n    <Typography variant=\"h3\" sx={{}} gutterBottom >\r\n            Ett sista tips\r\n          </Typography>\r\n          <Divider></Divider>\r\n    <Typography variant=\"body1\" sx={{lineHeight: 1.7, mt:\"10px\",  }} gutterBottom>\r\n       \r\n\r\nTänka på att dina värderingar ska vara dina egna. Värderingar tappar sitt värde om dom är baserad på \r\nvad hur du tror att andra vill att du ska vara. Det finns inget rätt och fel, inga bra eller dåliga värden. \r\nDina värderingar är dina, för att dom ska kunna fungera vägvisande i livet och för att dem ska bli meningsfulla för \r\ndig är det viktigt att dom är Dina. Du behöver aldrig kunna förklara varför en värdering är viktig för dig; precis som\r\n att du aldrig behöver ha ett argument för varför blått är din favoritfärg, det är ditt tycke och din smak.\r\n\r\n         \r\n          </Typography>\r\n          </Box>\r\n       \r\n\r\n          <Button variant=\"contained\" color='primary' aria-label=\"Nästa\" startIcon={< ArrowBackIosIcon/>} onClick={prevPage}\r\n        sx={{ ml:\"15px\", mb:\"15px\", }}>\r\n          Tillbaka \r\n        </Button>\r\n\r\n        <Button variant=\"contained\" color='primary' aria-label=\"Backa\" endIcon={<ArrowForwardIosIcon />} onClick={nextPage}\r\n        sx={{float:\"right\", mr:\"15px\", mb:\"15px\", }}>\r\n          Nästa \r\n        </Button>\r\n\r\n\r\n        </Container>\r\n\r\n    \r\n\r\n\r\n\r\n      </div>\r\n    </Slide>\r\n  );\r\n}\r\n\r\nexport default ValueCompassStep1;\r\n","import React from \"react\";\r\nimport ValuePicker from \"./components/ValuePicker\";\r\nimport \"./app.css\";\r\nimport Navbar from \"./components/navbar\";\r\nimport Home from \"./components/Home\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport ValueDetalis from \"./components/ValueDetails\";\r\nimport CreateValue from \"./components/CreateValue\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport ValueSorter from \"./components/ValueSorter\";\r\nimport ValueResults from \"./components/ValueResults\";\r\nimport ValueCompassStep1 from \"./components/ValueCompassStep1\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport \"material-icons/iconfont/material-icons.css\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { blue } from \"@mui/material/colors\";\r\n\r\n/* hur många ord i listan?\r\nmer mellanrum mellan korten\r\npresentera ångra först när man kan ångra\r\ncontainer resultat\r\n*/\r\n\r\n// json-server --watch db.json --port8000\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: blue[700],\r\n    },\r\n    secondary: {\r\n      main: blue[400],\r\n    },\r\n  },\r\n\r\n  typography: {\r\n    fontFamily: \"Montserrat\",\r\n    fontWeightRegular: 500,\r\n    fontWeightMedium: 600,\r\n    fontWeightBold: 800,\r\n    h1: {\r\n      fontSize: \"2rem\",\r\n      fontWeight: \"bolder\",\r\n    },\r\n    h2: {\r\n      fontSize: \"1.6rem\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    h3: {\r\n      fontSize: \"1,3rem\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    h4: {\r\n      fontSize: \"1rem\",\r\n      fontWeight: \"bold\",\r\n    },\r\n\r\n    button: {\r\n      fontWeight: \"800\",\r\n    },\r\n  },\r\n\r\n  components: {\r\n    MuiButton: {\r\n      variants: [\r\n        {\r\n          props: { variant: \"bottomRight\" },\r\n          style: {\r\n            backgroundColor: \"primary\",\r\n            color: \"white\",\r\n            float: \"right\",\r\n            mb: \"15px\",\r\n            mt: \"45px\",\r\n            mr: \"15px\",\r\n          },\r\n        },\r\n        {\r\n          props: { variant: \"dashed\", color: \"secondary\" },\r\n          style: {\r\n            border: `4px dashed `,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"appWrapper\">\r\n          <div className=\"app\">\r\n            <ThemeProvider theme={theme}>\r\n              {/* Switch = endast en kommer visas, route ger en path; i den path\r\n           visa det i som finns i route elementet, om inte exact path så matchar /creat /*/}\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                  <Home />\r\n                </Route>\r\n\r\n                <Route exact path=\"/values1\">\r\n                  <ValueCompassStep1 />\r\n                </Route>\r\n\r\n                <Route exact path=\"/valueList\">\r\n                  <ValuePicker text={\" \"} />\r\n                </Route>\r\n                <Route exact path=\"/valueSorter\">\r\n                  <ValueSorter />\r\n                </Route>\r\n                <Route exact path=\"/valueResults\">\r\n                  <ValueResults />\r\n                </Route>\r\n\r\n                <Route path=\"/createValue\">\r\n                  <CreateValue />\r\n                </Route>\r\n                {/*  /:id för att dynamiskt kunna visa resultat uifrån route parmeter /*/}\r\n                <Route path=\"/values/:id\">\r\n                  <ValueDetalis />\r\n                </Route>\r\n\r\n                {/*  * fångar alla routes, måste vara i botten 404*/}\r\n                <Route path=\"*\">\r\n                  <NotFound />\r\n                </Route>\r\n              </Switch>\r\n            </ThemeProvider>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import './index.css';\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}